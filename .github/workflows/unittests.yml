 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'

 jobs:
   unittests:
     name: conda (${{ matrix.os }}, ${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     timeout-minutes: 30
     strategy:
       matrix:
         os: [macos-latest, ubuntu-latest]
         ############################################ replace above with this chunk when Windows testing gets worked out
         #os: [macos-latest, ubuntu-latest, windows-latest]
         ############################################
         environment-file: [ci/36-GIT.yaml, ci/36-PYPI.yaml, ci/36-GIT-PLUS.yaml, ci/36-PYPI-PLUS.yaml, ci/37-GIT.yaml, ci/37-PYPI.yaml, ci/37-GIT-PLUS.yaml, ci/37-PYPI-PLUS.yaml, ci/38-GIT.yaml, ci/38-PYPI.yaml, ci/38-GIT-PLUS.yaml, ci/38-PYPI-PLUS.yaml]
         ############################################ replace above with this chunk when Python 3.9 dependecies get worked out
         #environment-file: [ci/36-GIT.yaml, ci/36-PYPI.yaml, ci/36-GIT-PLUS.yaml, ci/36-PYPI-PLUS.yaml, ci/37-GIT.yaml, ci/37-PYPI.yaml, ci/37-GIT-PLUS.yaml, ci/37-PYPI-PLUS.yaml, ci/38-GIT.yaml, ci/38-PYPI.yaml, ci/38-GIT-PLUS.yaml, ci/38-PYPI-PLUS.yaml, ci/39-GIT.yaml, ci/39-PYPI.yaml, ci/39-GIT-PLUS.yaml, ci/39-PYPI-PLUS.yaml]
         ############################################
         ############################################ uncomment this chunk when Windows testing gets worked out
         #exclude:
         #  - environment-file: ci/36-PYPI-PLUS.yaml
         #    os: windows-latest
         #  - environment-file: ci/36-GIT-PLUS.yaml
         #    os: windows-latest
         ############################################
     defaults:
       run:
         shell: bash -l {0}
     steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         env:
           CACHE_NUMBER: 0
         with:
           path: ~/conda_pkgs_dir
           key: ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles(matrix.environment-file) }}
       - uses: conda-incubator/setup-miniconda@v2
         with:
            miniconda-version: 'latest'
            mamba-version: '*'
            channels: conda-forge
            channel-priority: true
            auto-update-conda: false
            auto-activate-base: false
            environment-file: ${{ matrix.environment-file }}
            activate-environment: test
            use-only-tar-bz2: true
       - run: mamba info --all
       - run: mamba list
       - run: conda config --show-sources
       - run: conda config --show
       - run: pytest -v spreg --cov=spreg --cov-config=.coveragerc --cov-report=xml
       ############################################## replace above with this chunk when docstring testing gets worked out
       #- run: pytest -v spreg --cov=spreg --doctest-modules --cov-config=.coveragerc --cov-report=xml
       ##############################################
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1.5.0
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: spreg-codecov
